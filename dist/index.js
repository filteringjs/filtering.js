!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define("filteringjs",[],e):"object"==typeof exports?exports.filteringjs=e():t.filteringjs=e()}(this,(()=>(()=>{"use strict";var t={d:(e,s)=>{for(var r in s)t.o(s,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:s[r]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};t.r(e),t.d(e,{Filter:()=>c,FilterData:()=>m,Filtering:()=>a,FilteringFlow:()=>f,Group:()=>n,Item:()=>h,Parser:()=>d,Schema:()=>l});class s{#t;#e=new Map;constructor(t){this.#t=t,this.#s()}#s(){for(const t of this.schema.groups){const e=new r(t);for(const s of t.filters){const t=new i(s);e.addFilter(t)}this.#r(e)}}get schema(){return this.#t}get groups(){return[...this.#e.values()]}get groupNames(){return[...this.#e.keys()]}#r(t){this.#e.set(t.schemaGroup.name,t)}getGroup(t){return this.#e.get(t)}get filteredItems(){const t=new Set;for(const e of this.groups)for(const s of e.filteredItems)t.add(s);return[...t]}addFilteredItem(t){for(const e of t.getGroupNames())this.#e.get(e).addFilteredItem(t)}get possibleItems(){const t=new Set;for(const e of this.groups)for(const s of e.possibleItems)t.add(s);return[...t]}get allItems(){const t=new Set;for(const e of this.groups)for(const s of e.allItems)t.add(s);return[...t]}addAllItem(t){for(const e of t.getGroupNames())this.#e.get(e).addAllItem(t)}}class r{#i;#o=new Map;constructor(t){this.#i=t}get schemaGroup(){return this.#i}get filters(){return[...this.#o.values()]}addFilter(t){this.#o.set(t.schemaFilter.name,t)}getFilter(t){return this.#o.get(t)}get filteredItems(){const t=new Set;for(const e of this.filters)for(const s of e.filteredItems)t.add(s);return[...t]}addFilteredItem(t){for(const e of t.getFilterNames(this.schemaGroup.name))this.#o.get(e).addFilteredItem(t)}get possibleItems(){const t=new Set;for(const e of this.filters)for(const s of e.possibleItems)t.add(s);return[...t]}get allItems(){const t=new Set;for(const e of this.filters)for(const s of e.allItems)t.add(s);return[...t]}addAllItem(t){for(const e of t.getFilterNames(this.schemaGroup.name))this.#o.get(e).addAllItem(t)}}class i{#a;#l=new Set;#n=new Set;#c=new Set;constructor(t){this.#a=t}get schemaFilter(){return this.#a}get filteredItems(){return[...this.#l]}addFilteredItem(t){this.#l.add(t),this.addPossibleItem(t),this.addAllItem(t)}get possibleItems(){return[...this.#n]}addPossibleItem(t){this.#n.add(t),this.addAllItem(t)}get allItems(){return[...this.#c]}addAllItem(t){this.#c.add(t)}}function o(t,e){for(const s of e)if(t.has(s))return!0;return!1}class a{#t;#h;constructor(t,e={}){this.#t=t,this.#h=e}filter(t){const e=new s(this.#t);let r=[];if(this.#h.filterItem)for(const e of this.#t.items)this.#h.filterItem(e,this.#t,t)&&r.push(e);else r=[...this.#t.items];for(const t of r)e.addAllItem(t);for(const s of this.#m(r,t))e.addFilteredItem(s);return this.#d(e,r,t),e}#d(t,e,s){for(const r of t.groupNames){const i=s.clone();i.disableGroup(r);const o=this.#m(e,i);for(const e of o)for(const s of e.getFilterNames(r))t.getGroup(r).getFilter(s).addPossibleItem(e)}}#m(t,e){const s=new Set;for(const r of t){let t=!0;for(const[s,i]of e.checkedFilters)if(i.size>0&&!o(r.getFilterNames(s),i)){t=!1;break}t&&s.add(r)}return s}}class l{#e=new Map;#f=[];#u;constructor(t){this.#u=t}get groups(){return[...this.#e.values()]}get items(){return this.#f}addGroup(t){if(this.#e.has(t.name))throw new Error(`Group with name ${t.name} already added to schema. Group names have to be unique.`);this.#e.set(t.name,t)}addItem(t){this.#f.push(t)}addItems(t){for(const e of t)this.addItem(e)}get data(){return this.#u}}class n{#p;#o=new Map;#u;constructor(t,e){this.#p=t,this.#u=e}get name(){return this.#p}get filters(){return[...this.#o.values()]}addFilter(t){if(this.#o.has(t.name))throw new Error(`Filter with name ${t.name} already in group ${this.name}. Filter names have to be unique in a Group.`);this.#o.set(t.name,t)}getFilterNames(){return[...this.#o.keys()]}get data(){return this.#u}}class c{#p;#u;constructor(t,e){this.#p=t,this.#u=e}get name(){return this.#p}get data(){return this.#u}}class h{#u;#e=new Map;constructor(t){this.#u=t}get data(){return this.#u}getGroupNames(){return new Set(this.#e.keys())}addFilter(t,e){this.#g(t).add(e)}#g(t){return this.#e.has(t)||this.#e.set(t,new Set),this.#e.get(t)}getFilterNames(t){return this.#e.has(t)?new Set(this.#e.get(t)):new Set}}class m{#F=new Map;get checkedFilters(){return this.#F}checkFilter(t,e){this.#g(t).add(e)}checkAllFilters(t){this.#g(t).clear()}#g(t){return this.#F.has(t)||this.#F.set(t,new Set),this.#F.get(t)}disableGroup(t){this.#F.delete(t)}clone(){const t=new m;for(const[e,s]of this.#F.entries())for(const r of s)t.checkFilter(e,r);return t}}class d{static#I={groupClass:"filtering-group",filterClass:"filtering-filter",itemClass:"filtering-item",itemFilterNameAttributePrefix:"data-filter",filterCheckedClass:"checked"};#h;constructor(t={}){this.#h={...d.#I,...t}}get options(){return this.#h}parseSchemaFromHtml(t,e=new l){this.parseGroupsAndFiltersFromHtml(t,e);for(const s of this.parseItemsFromHtml(t))e.addItem(s);return e}parseGroupsAndFiltersFromHtml(t,e){for(const s of t.getElementsByClassName(this.#h.groupClass)){const t=s.dataset.groupName;if(void 0===t)continue;const r=new n(t,{element:s,label:s.dataset.groupLabel});for(const t of s.getElementsByClassName(this.#h.filterClass)){const e=t.dataset.filterName;if(void 0===e)continue;const s=new c(e,{element:t,label:t.dataset.filterLabel});r.addFilter(s)}e.addGroup(r)}}parseItemsFromHtml(t){const e=[],s=new RegExp(`${this.#h.itemFilterNameAttributePrefix}-(?<groupName>.+)`,"i");for(const r of t.getElementsByClassName(this.#h.itemClass)){const t=new h({element:r});for(const{name:e,value:i}of r.attributes){const r=e.match(s);if(r){const{groupName:e}=r.groups;for(const s of i.split(/\s*,\s*/))t.addFilter(e,s)}}e.push(t)}return e}parseCheckedFilterDataFromHtml(t){const e=new m;for(const s of t.getElementsByClassName(this.#h.groupClass)){const t=s.dataset.groupName;for(const r of s.getElementsByClassName(this.#h.filterClass)){const s=r.dataset.filterName;r.classList.contains(this.#h.filterCheckedClass)&&e.checkFilter(t,s)}}return e}}class f{options;static defaultOptions={triggerFilterAfterInitializing:!0,disabledFilterClass:"disabled",filteredItemClass:"filtered"};root;schema;parser;filtering;constructor(t,e={}){this.root=t,this.options={...f.defaultOptions,...e},this.initializeParser(),this.initializeSchema(),this.initializeFiltering(),this.initializeFilterListener(),this.options.triggerFilterAfterInitializing&&this.filter()}initializeParser(t){return this.parser=new d(t),this.parser}initializeSchema(){return this.schema=this.parser.parseSchemaFromHtml(this.root),this.schema}initializeFiltering(t){return this.filtering=new a(this.schema,t),this.filtering}initializeFilterListener(){for(const t of this.root.getElementsByClassName(this.parser.options.filterClass))t.addEventListener("click",(e=>{e.preventDefault(),t.classList.contains(this.options.disabledFilterClass)||this.beforeFilter(t)&&(t.classList.toggle(this.parser.options.filterCheckedClass),this.filter())}))}beforeFilter(t){return!0}filter(){const t=this.parser.parseCheckedFilterDataFromHtml(this.root),e=this.filtering.filter(t);for(const t of e.groups)for(const e of t.filters)e.schemaFilter.data.element.classList.toggle(this.options.disabledFilterClass,0===e.possibleItems.length);for(const t of e.allItems)t.data.element.classList.toggle(this.options.filteredItemClass,!e.filteredItems.includes(t));return e}}return e})()));
//# sourceMappingURL=index.js.map