!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var s=t();for(var r in s)("object"==typeof exports?exports:e)[r]=s[r]}}(this,(()=>(()=>{"use strict";var e,t,s={d:(e,t)=>{for(var r in t)s.o(t,r)&&!s.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},r={};s.r(r),s.d(r,{ENABLE_ALL_FILTER:()=>d,Filter:()=>l,FilterData:()=>n,Filtering:()=>p,FilteringParser:()=>f,Group:()=>i,Item:()=>o,Schema:()=>a});class a{#e=new Map;#t=[];#s;constructor(e){this.#s=e}get groups(){return[...this.#e.values()]}get items(){return this.#t}addGroup(e){if(this.#e.has(e.name))throw new Error(`Group with name ${e.name} already added to schema. Group names have to be unique.`);this.#e.set(e.name,e)}addItem(e){this.#t.push(e)}addItems(e){for(const t of e)this.addItem(t)}get data(){return this.#s}}class i{#r;#a;#i;#l=new Map;#s;constructor(t,s,r=e.singleSelect,a){this.#r=t,this.#a=s,this.#i=r,this.#s=a}get name(){return this.#r}get label(){return this.#a}get type(){return this.#i}get filters(){return[...this.#l.values()]}addFilter(e){if(this.#l.has(e.name))throw new Error(`Filter with name ${e.name} already in group ${this.name}. Filter names have to be unique in a Group.`);this.#l.set(e.name,e)}getFilterNames(){return new Set(this.#l.keys())}get data(){return this.#s}}!function(e){e.singleSelect="",e.multiSelect="multiSelect"}(e||(e={}));class l{#r;#a;#i;#s;constructor(e,s,r=t.single,a){this.#r=e,this.#a=s,this.#i=r,this.#s=a}get name(){return this.#r}get label(){return this.#a}get type(){return this.#i}get data(){return this.#s}}!function(e){e.single="",e.all="all"}(t||(t={}));class o{#s;#e=new Map;constructor(e){this.#s=e}get data(){return this.#s}getGroupNames(){return new Set(this.#e.keys())}addFilter(e,t){this.#o(e).add(t)}#o(e){return this.#e.has(e)||this.#e.set(e,new Set),this.#e.get(e)}getFilterNames(e){return this.#e.has(e)?new Set(this.#e.get(e)):new Set}}class n{#n=new Map;get enabledGroups(){return this.#n.keys()}get enabledFilters(){return this.#n}enableFilter(e,t){const s=this.#o(e);s.has(d)||(t===d?this.enableAllFilter(e):s.add(t))}enableAllFilter(e){const t=this.#o(e);t.clear(),t.add(d)}#o(e){return this.#n.has(e)||this.#n.set(e,new Set),this.#n.get(e)}enableGroup(e){this.#n.delete(e),this.enableAllFilter(e)}disableGroup(e){this.#n.delete(e)}clone(){const e=new n;for(const[t,s]of this.#n.entries())for(const r of s)e.enableFilter(t,r);return e}}const d=Symbol("Enable all filter");class m{#d;#e=new Map;#m=new Set;#u=new Set;constructor(e){this.#d=e}get schema(){return this.#d}get groups(){return[...this.#e.values()]}get groupNames(){return[...this.#e.keys()]}addGroup(e){this.#e.set(e.schemaGroup.name,e)}getGroup(e){return this.#e.get(e)}get filteredItems(){return[...this.#m]}addFilteredItem(e){this.#m.add(e);for(const t of e.getGroupNames())this.#e.get(t).addFilteredItem(e)}get allItems(){return[...this.#u]}addAllItem(e){this.#u.add(e);for(const t of e.getGroupNames())this.#e.get(t).addAllItem(e)}}class u{#h;#l=new Map;#m=new Set;#u=new Set;constructor(e){this.#h=e}get schemaGroup(){return this.#h}get filters(){return[...this.#l.values()]}addFilter(e){this.#l.set(e.schemaFilter.name,e)}getFilter(e){return this.#l.get(e)}addFilteredItem(e){this.#m.add(e);for(const t of e.getFilterNames(this.schemaGroup.name))this.#l.get(t).addFilteredItem(e)}addAllItem(e){this.#u.add(e);for(const t of e.getFilterNames(this.schemaGroup.name))this.#l.get(t).addAllItem(e)}}class h{#c;#m=new Set;#p=new Set;#u=new Set;constructor(e){this.#c=e}get schemaFilter(){return this.#c}get filteredItems(){return[...this.#m]}addFilteredItem(e){this.#m.add(e)}get possibleItems(){return[...this.#p]}addPossibleItem(e){this.#p.add(e)}get allItems(){return[...this.#u]}addAllItem(e){this.#u.add(e)}}function c(e,t){for(const s of t)if(e.has(s))return!0;return!1}class p{schema;options;constructor(e,t={}){this.schema=e,this.options=t}filter(e){return new Promise(((t,s)=>{const r=this.createEmptyResult(this.schema);for(const e of this.schema.items)r.addAllItem(e);for(const t of this.getFilterItems(this.schema.items,e))r.addFilteredItem(t);this.calculatePossibleItems(r,this.schema.items,e),t(r)}))}createEmptyResult(e){const t=new m(e);for(const s of e.groups){const e=new u(s);for(const t of s.filters){const s=new h(t);e.addFilter(s)}t.addGroup(e)}return t}calculatePossibleItems(e,t,s){for(const r of e.groupNames){const a=s.clone();a.disableGroup(r);const i=this.getFilterItems(t,a);for(const t of i)for(const s of t.getFilterNames(r))e.getGroup(r).getFilter(s).addPossibleItem(t)}}getFilterItems(e,t){const s=new Set;for(const r of e){let e=!0;for(const[s,a]of t.enabledFilters)if(!a.has(d)&&a.size>0&&!c(r.getFilterNames(s),a)){e=!1;break}e&&s.add(r)}return s}}class f{static#f={groupClass:"filtering-group",filterClass:"filtering-filter",itemClass:"filtering-item",itemFilterNameAttributePrefix:"data-filter",filterEnabledClass:"enabled"};#g;constructor(e){this.#g={...f.#f,...e}}parseSchemaFromHtml(e,t=new a){this.parseGroupsAndFiltersFromHtml(e,t);for(const s of this.parseItemsFromHtml(e))t.addItem(s);return t}parseGroupsAndFiltersFromHtml(e,t){const s=[...e.querySelectorAll(`.${this.#g.groupClass}`)];for(const e of s){const s=e.dataset.groupName,r=e.dataset.groupLabel||s,a=e.dataset.groupType,o=new i(s,r,a,{element:e}),n=[...e.querySelectorAll(`.${this.#g.filterClass}`)];for(const e of n){const t=e.dataset.filterName,s=e.dataset.filterLabel||t,r=e.dataset.filterType,a=new l(t,s,r,{element:e});o.addFilter(a)}t.addGroup(o)}}parseItemsFromHtml(e){const t=[],s=new RegExp(`${this.#g.itemFilterNameAttributePrefix}-(?<groupName>.+)`,"i"),r=[...e.querySelectorAll(`.${this.#g.itemClass}`)];for(const e of r){const r=new o({element:e});for(const{name:t,value:a}of e.attributes){const e=t.match(s);if(e){const{groupName:t}=e.groups;for(const e of a.split(/\s*,\s*/))r.addFilter(t,e)}}t.push(r)}return t}parseEnabledFilterDataFromHtml(e){const s=new n,r=[...e.querySelectorAll(`.${this.#g.groupClass}`)];for(const e of r){const r=e.dataset.groupName,a=[...e.querySelectorAll(`.${this.#g.filterClass}`)];for(const e of a){const a=e.dataset.filterName,i=e.dataset.filterType;if(e.classList.contains(this.#g.filterEnabledClass)){if(i===t.all){s.enableAllFilter(r);break}s.enableFilter(r,a)}}}return s}}return r})()));